var Base64 = {
    _keyStr: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',
    encode: function(input) {
        var output = '';
        var _0x83f0x4, _0x83f0x5, _0x83f0x6, _0x83f0x7, _0x83f0x8, _0x83f0x9, _0x83f0xa;
        var _0x83f0xb = 0;
        input = Base64._utf8_encode(input);
        while (_0x83f0xb < input['length']) {
            _0x83f0x4 = input['charCodeAt'](_0x83f0xb++);
            _0x83f0x5 = input['charCodeAt'](_0x83f0xb++);
            _0x83f0x6 = input['charCodeAt'](_0x83f0xb++);
            _0x83f0x7 = _0x83f0x4 >> 2;
            _0x83f0x8 = ((_0x83f0x4 & 3) << 4) | (_0x83f0x5 >> 4);
            _0x83f0x9 = ((_0x83f0x5 & 15) << 2) | (_0x83f0x6 >> 6);
            _0x83f0xa = _0x83f0x6 & 63;
            if (isNaN(_0x83f0x5)) {
                _0x83f0x9 = _0x83f0xa = 64
            } else {
                if (isNaN(_0x83f0x6)) {
                    _0x83f0xa = 64
                }
            };
            output = output + this['_keyStr']['charAt'](_0x83f0x7) + this['_keyStr']['charAt'](_0x83f0x8) + this['_keyStr']['charAt'](_0x83f0x9) + this['_keyStr']['charAt'](_0x83f0xa)
        };
        return output
    },
    decode: function(input) {
        var output = '';
        var _0x83f0x4, _0x83f0x5, _0x83f0x6;
        var _0x83f0x7, _0x83f0x8, _0x83f0x9, _0x83f0xa;
        var _0x83f0xb = 0;
        input = input['replace'](/[^A-Za-z0-9\+\/\=]/g, '');
        while (_0x83f0xb < input['length']) {
            _0x83f0x7 = this['_keyStr']['indexOf'](input['charAt'](_0x83f0xb++));
            _0x83f0x8 = this['_keyStr']['indexOf'](input['charAt'](_0x83f0xb++));
            _0x83f0x9 = this['_keyStr']['indexOf'](input['charAt'](_0x83f0xb++));
            _0x83f0xa = this['_keyStr']['indexOf'](input['charAt'](_0x83f0xb++));
            _0x83f0x4 = (_0x83f0x7 << 2) | (_0x83f0x8 >> 4);
            _0x83f0x5 = ((_0x83f0x8 & 15) << 4) | (_0x83f0x9 >> 2);
            _0x83f0x6 = ((_0x83f0x9 & 3) << 6) | _0x83f0xa;
            output = output + String['fromCharCode'](_0x83f0x4);
            if (_0x83f0x9 != 64) {
                output = output + String['fromCharCode'](_0x83f0x5)
            };
            if (_0x83f0xa != 64) {
                output = output + String['fromCharCode'](_0x83f0x6)
            }
        };
        output = Base64._utf8_decode(output);
        return output
    },
    _utf8_encode: function(_0x83f0xc) {
        _0x83f0xc = _0x83f0xc['replace'](/\r\n/g, '\x0A');
        var _0x83f0xd = '';
        for (var _0x83f0xe = 0; _0x83f0xe < _0x83f0xc['length']; _0x83f0xe++) {
            var _0x83f0xf = _0x83f0xc['charCodeAt'](_0x83f0xe);
            if (_0x83f0xf < 128) {
                _0x83f0xd += String['fromCharCode'](_0x83f0xf)
            } else {
                if ((_0x83f0xf > 127) && (_0x83f0xf < 2048)) {
                    _0x83f0xd += String['fromCharCode']((_0x83f0xf >> 6) | 192);
                    _0x83f0xd += String['fromCharCode']((_0x83f0xf & 63) | 128)
                } else {
                    _0x83f0xd += String['fromCharCode']((_0x83f0xf >> 12) | 224);
                    _0x83f0xd += String['fromCharCode'](((_0x83f0xf >> 6) & 63) | 128);
                    _0x83f0xd += String['fromCharCode']((_0x83f0xf & 63) | 128)
                }
            }
        };
        return _0x83f0xd
    },
    _utf8_decode: function(_0x83f0xd) {
        var _0x83f0xc = '';
        var _0x83f0xb = 0;
        var _0x83f0xf = c1 = c2 = 0;
        while (_0x83f0xb < _0x83f0xd['length']) {
            _0x83f0xf = _0x83f0xd['charCodeAt'](_0x83f0xb);
            if (_0x83f0xf < 128) {
                _0x83f0xc += String['fromCharCode'](_0x83f0xf);
                _0x83f0xb++
            } else {
                if ((_0x83f0xf > 191) && (_0x83f0xf < 224)) {
                    c2 = _0x83f0xd['charCodeAt'](_0x83f0xb + 1);
                    _0x83f0xc += String['fromCharCode'](((_0x83f0xf & 31) << 6) | (c2 & 63));
                    _0x83f0xb += 2
                } else {
                    c2 = _0x83f0xd['charCodeAt'](_0x83f0xb + 1);
                    c3 = _0x83f0xd['charCodeAt'](_0x83f0xb + 2);
                    _0x83f0xc += String['fromCharCode'](((_0x83f0xf & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));
                    _0x83f0xb += 3
                }
            }
        };
        return _0x83f0xc
    }
};
var encode = document['getElementById']('encode'),
    decode = document['getElementById']('decode'),
    output = document['getElementById']('output'),
    input = document['getElementById']('input');
var User_ID = '';
var protected_links = '';
var a_to_va = 0;
var a_to_vb = 0;
var a_to_vc = '';

function auto_safelink() {
    auto_safeconvert()
}

function auto_safeconvert() {
    var _0x83f0x19 = window['location']['hostname'];
    if (protected_links != '' && !protected_links['match'](_0x83f0x19)) {
        protected_links += ', ' + _0x83f0x19
    } else {
        if (protected_links == '') {
            protected_links = _0x83f0x19
        }
    };
    var _0x83f0x1a = '';
    var _0x83f0x1b = new Array();
    var _0x83f0x1c = 0;
    _0x83f0x1a = document['getElementsByTagName']('a');
    a_to_va = _0x83f0x1a['length'];
    _0x83f0x1b = a_to_fa();
    _0x83f0x1c = _0x83f0x1b['length'];
    var _0x83f0x1d = false;
    var _0x83f0x1e = 0;
    var _0x83f0x1f = '';
    for (var _0x83f0xb = 0; _0x83f0xb < a_to_va; _0x83f0xb++) {
        _0x83f0x1d = false;
        _0x83f0x1e = 0;
        while (_0x83f0x1d == false && _0x83f0x1e < _0x83f0x1c) {
            _0x83f0x1f = _0x83f0x1a[_0x83f0xb]['href'];
            if (_0x83f0x1f['match'](_0x83f0x1b[_0x83f0x1e]) || !_0x83f0x1f || !_0x83f0x1f['match']('http')) {
                _0x83f0x1d = true
            };
            _0x83f0x1e++
        };
        if (_0x83f0x1d == false) {
            var _0x83f0x20 = Base64['encode'](_0x83f0x1f);
            _0x83f0x1a[_0x83f0xb]['href'] = 'https://sh.beingames4u.net/p/go.html?url=' + _0x83f0x20;
            _0x83f0x1a[_0x83f0xb]['rel'] = 'nofollow';
            a_to_vb++;
            a_to_vc += _0x83f0xb + ':::' + _0x83f0x1a[_0x83f0xb]['href'] + '\x0A'
        }
    };
    var _0x83f0x21 = document['getElementById']('anonyminized');
    var _0x83f0x22 = document['getElementById']('found_links');
    if (_0x83f0x21) {
        _0x83f0x21['innerHTML'] += a_to_vb
    };
    if (_0x83f0x22) {
        _0x83f0x22['innerHTML'] += a_to_va
    }
}

function a_to_fa() {
    var _0x83f0x1b = new Array();
    protected_links = protected_links['replace'](' ', '');
    _0x83f0x1b = protected_links['split'](',');
    return _0x83f0x1b
}
